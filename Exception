// Custom exception for age validation
class AgeNotWithinRangeException extends Exception {
    public AgeNotWithinRangeException(String message) {
        super(message);
    }
}

// Custom exception for name validation
class NameNotValidException extends Exception {
    public NameNotValidException(String message) {
        super(message);
    }
}

// Student class with attributes and validations
class Student {
    private int rollNo;
    private String name;
    private int age;
    private String course;

    // Parameterized constructor
    public Student(int rollNo, String name, int age, String course) throws AgeNotWithinRangeException, NameNotValidException {
        this.rollNo = rollNo;
        this.name = name;
        this.age = age;
        this.course = course;

        // Validate age
        if (age < 15 || age > 21) {
            throw new AgeNotWithinRangeException("Age " + age + " is not within the valid range (15-21).");
        }

        // Validate name
        if (!name.matches("[a-zA-Z\\s]+")) { // Only allows letters and spaces
            throw new NameNotValidException("Name '" + name + "' contains invalid characters.");
        }
    }

    // Getter methods
    public int getRollNo() {
        return rollNo;
    }

    public String getName() {
        return name;
    }

    public int getAge() {
        return age;
    }

    public String getCourse() {
        return course;
    }

    @Override
    public String toString() {
        return "Student [Roll No: " + rollNo + ", Name: " + name + ", Age: " + age + ", Course: " + course + "]";
    }
}

// Main class to test the Student class and exceptions
public class Main {
    public static void main(String[] args) {
        try {
            // Create Student instances and handle exceptions
            Student student1 = new Student(1, "John Doe", 20, "Computer Science");
            System.out.println(student1);

            // This will throw an exception because the age is outside the valid range
            Student student2 = new Student(2, "Jane Smith", 22, "Mathematics");
            System.out.println(student2);

            // This will throw an exception because the name contains a number
            Student student3 = new Student(3, "Alice123", 18, "Physics");
            System.out.println(student3);

        } catch (AgeNotWithinRangeException e) {
            System.out.println("Error: " + e.getMessage());
        } catch (NameNotValidException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }
}
