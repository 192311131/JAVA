import java.util.TreeSet;
class ExamRoom {
    private int n;
    private TreeSet<Integer> students;
    public ExamRoom(int n) {
        this.n = n;
        students = new TreeSet<>();
    }
    public int seat() {
        if (students.isEmpty()) {
            students.add(0);
            return 0;
        }
        int prev = -1;
        int maxDist = students.first();
        int seat = 0;
        for (int s : students) {
            if (prev != -1) {
                int dist = (s - prev) / 2;
                if (dist > maxDist) {
                    maxDist = dist;
                    seat = prev + dist;
                }
            }
            prev = s;
        }
        if (n - 1 - students.last() > maxDist) {
            seat = n - 1;
        }
        students.add(seat);
        return seat;
    }
    public void leave(int p) {
        students.remove(p);
    }
}
public class Main {
    public static void main(String[] args) {
        ExamRoom examRoom = new ExamRoom(10);
        System.out.println(examRoom.seat());
        System.out.println(examRoom.seat());
        System.out.println(examRoom.seat());
        System.out.println(examRoom.seat());
        examRoom.leave(4);
        System.out.println(examRoom.seat());
    }
}
